// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package publicimagepath.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import publicimagepath.entities.ImageServiceDefinitionEntity;
import publicimagepath.proxies.ImageServiceDefinition;
import publicimagepath.repositories.ImageServiceDefinitionRepository;
import publicimagepath.repositories.MendixImageRepository;
import publicimagepath.usecases.PublicImagePathHandler;
import publicimagepath.usecases.PublicImagePathLoader;

public class StartPublicImagePath extends CustomJavaAction<java.lang.Boolean>
{
	public StartPublicImagePath(IContext context)
	{
		super(context);
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		MendixImageRepository mendixImageRepository = new MendixImageRepository(getContext());
		ImageServiceDefinitionRepository imageServiceDefinitionRepository = new ImageServiceDefinitionRepository(getContext());
		ImageServiceDefinitionEntity imageServiceDefinitionEntity = new ImageServiceDefinitionEntity(getContext());
		PublicImagePathLoader publicImagePathLoader = new PublicImagePathLoader(imageServiceDefinitionRepository);
		List<ImageServiceDefinition> imageServiceDefinitions = publicImagePathLoader.load();
		Core.addRequestHandler("images/", new PublicImagePathHandler(imageServiceDefinitions, imageServiceDefinitionEntity, mendixImageRepository));
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "StartPublicImagePath";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
