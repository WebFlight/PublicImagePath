// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package publicimagepath.actions;

import java.util.List;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import publicimagepath.entities.MendixObjectEntity;
import publicimagepath.helpers.ImageServiceDefinitionMatcher;
import publicimagepath.helpers.ImageServiceDefinitionParser;
import publicimagepath.proxies.ImageServiceDefinition;
import publicimagepath.repositories.MendixObjectRepository;
import publicimagepath.usecases.PublicImagePathHandler;
import publicimagepath.usecases.PublicImagePathLoader;

public class StartPublicImagePath extends CustomJavaAction<java.lang.Boolean>
{
	public StartPublicImagePath(IContext context)
	{
		super(context);
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		ILogNode logger = Core.getLogger("PublicImagePath");
		
		MendixObjectRepository mendixObjectRepository = new MendixObjectRepository(getContext());
		MendixObjectEntity mendixObjectEntity = new MendixObjectEntity(getContext());
		PublicImagePathLoader publicImagePathLoader = new PublicImagePathLoader(mendixObjectRepository, mendixObjectEntity, logger);
		ImageServiceDefinitionMatcher imageServiceDefinitionMatcher = new ImageServiceDefinitionMatcher(mendixObjectEntity);
		ImageServiceDefinitionParser imageServiceDefinitionParser = new ImageServiceDefinitionParser(mendixObjectEntity);
		
		List<ImageServiceDefinition> imageServiceDefinitions = publicImagePathLoader.load();
		
		if (publicImagePathLoader.validate(imageServiceDefinitions) == false) {
			logger.error("Errors occured during validation of ImageServiceDefinitions. PublicImagePath could not be initialized.");
			return false;
		}
		
		Core.addRequestHandler("images/", new PublicImagePathHandler(imageServiceDefinitions, mendixObjectEntity, mendixObjectRepository, imageServiceDefinitionMatcher, imageServiceDefinitionParser));
		
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "StartPublicImagePath";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
